// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

import * as pulumiAws from "@pulumi/aws";

import {Bucket} from "../storage";

export class StaticWeb extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'cloud-toolkit-aws:serverless:StaticWeb';

    /**
     * Returns true if the given object is an instance of StaticWeb.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StaticWeb {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StaticWeb.__pulumiType;
    }

    public /*out*/ readonly DNSRecords!: pulumi.Output<outputs.serverless.DNSRecordsArgs | undefined>;
    public /*out*/ readonly DNSRecordsForValidation!: pulumi.Output<outputs.serverless.DNSRecordsArgs | undefined>;
    public /*out*/ readonly certificate!: pulumi.Output<pulumiAws.acm.Certificate | undefined>;
    public /*out*/ readonly certificateValidation!: pulumi.Output<pulumiAws.acm.CertificateValidation | undefined>;
    public /*out*/ readonly contentBucket!: pulumi.Output<Bucket>;
    public /*out*/ readonly contentBucketPolicy!: pulumi.Output<pulumiAws.s3.BucketPolicy>;
    public /*out*/ readonly distribution!: pulumi.Output<pulumiAws.cloudfront.Distribution>;
    public /*out*/ readonly domainValidationOptions!: pulumi.Output<pulumiAws.types.output.acm.CertificateDomainValidationOption[] | undefined>;
    public /*out*/ readonly eastRegion!: pulumi.Output<pulumiAws.Provider>;
    public /*out*/ readonly logsBucket!: pulumi.Output<pulumiAws.s3.Bucket>;
    public /*out*/ readonly name!: pulumi.Output<string>;
    public /*out*/ readonly originAccessIdentity!: pulumi.Output<pulumiAws.cloudfront.OriginAccessIdentity>;

    /**
     * Create a StaticWeb resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: StaticWebArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["cache"] = args ? args.cache : undefined;
            resourceInputs["configureDNS"] = args ? args.configureDNS : undefined;
            resourceInputs["dns"] = args ? args.dns : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["includeWWW"] = args ? args.includeWWW : undefined;
            resourceInputs["priceClass"] = args ? args.priceClass : undefined;
            resourceInputs["DNSRecords"] = undefined /*out*/;
            resourceInputs["DNSRecordsForValidation"] = undefined /*out*/;
            resourceInputs["certificate"] = undefined /*out*/;
            resourceInputs["certificateValidation"] = undefined /*out*/;
            resourceInputs["contentBucket"] = undefined /*out*/;
            resourceInputs["contentBucketPolicy"] = undefined /*out*/;
            resourceInputs["distribution"] = undefined /*out*/;
            resourceInputs["domainValidationOptions"] = undefined /*out*/;
            resourceInputs["eastRegion"] = undefined /*out*/;
            resourceInputs["logsBucket"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["originAccessIdentity"] = undefined /*out*/;
        } else {
            resourceInputs["DNSRecords"] = undefined /*out*/;
            resourceInputs["DNSRecordsForValidation"] = undefined /*out*/;
            resourceInputs["certificate"] = undefined /*out*/;
            resourceInputs["certificateValidation"] = undefined /*out*/;
            resourceInputs["contentBucket"] = undefined /*out*/;
            resourceInputs["contentBucketPolicy"] = undefined /*out*/;
            resourceInputs["distribution"] = undefined /*out*/;
            resourceInputs["domainValidationOptions"] = undefined /*out*/;
            resourceInputs["eastRegion"] = undefined /*out*/;
            resourceInputs["logsBucket"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["originAccessIdentity"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StaticWeb.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a StaticWeb resource.
 */
export interface StaticWebArgs {
    cache?: pulumi.Input<inputs.serverless.CdnCacheArgsArgs>;
    configureDNS?: pulumi.Input<boolean>;
    dns?: pulumi.Input<inputs.serverless.CdnDnsArgsArgs>;
    domain?: pulumi.Input<string>;
    includeWWW?: pulumi.Input<boolean>;
    priceClass?: pulumi.Input<string>;
}
